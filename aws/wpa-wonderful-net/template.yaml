AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-test

  Sample SAM Template for sam-test

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
  Api:
    Cors:
      AllowOrigin: "'*'"


Resources:
  getLinksFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: lmd-getLinks/
      Handler: app.lambda_handler
      Runtime: python3.7
      Events:
        getLinks:
          Type: Api
          Properties:
            Path: /getLinks
            Method: get

      # Give DynamoDB Full Access to your Lambda Function
      # https://aws.amazon.com/premiumsupport/knowledge-center/lambda-sam-template-permissions/
      Policies:
        - AmazonDynamoDBFullAccess










  getNavCardsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: lmd-getNavCards/
      Handler: app.lambda_handler
      Runtime: python3.7
      Events:
        getNavCards:
          Type: Api 
          Properties:
            Path: /navCards
            Method: get
        
  
  
  # DynamoDBTable:
  #   Type: AWS::DynamoDB::Table
  #   Properties: 
  #     AttributeDefinitions: 
  #       - AttributeName: id
  #         AttributeType: S
  #     KeySchema: 
  #       - AttributeName: id
  #         KeyType: HASH
  #     ProvisionedThroughput: 
  #       ReadCapacityUnits: 5
  #       WriteCapacityUnits: 5



  # https://egghead.io/lessons/aws-deploy-a-new-dynamodb-table-to-aws-using-aws-sam-template
  Resources:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey: 
        Name: id
        Type: String
      TableName: Resources


Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  getNavCardsApi:
    Description: "API Gateway endpoint URL for Prod stage for Get Nav Cards function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/getNavCards/"
  getNavCardsFunction:
    Description: "Get Nav Cards Lambda Function ARN"
    Value: !GetAtt getNavCardsFunction.Arn
  getNavCardsFunctionIamRole:
    Description: "Implicit IAM Role created for Get Nav Cards function"
    Value: !GetAtt getNavCardsFunctionRole.Arn

  getLinksApi:
    Description: "API Gateway endpoint URL for Prod stage for Get Links function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/getLinks/"
  getLinksFunction:
    Description: "Get Links Lambda Function ARN"
    Value: !GetAtt getLinksFunction.Arn
  getLinksFunctionIamRole:
    Description: "Implicit IAM Role created for Get Links function"
    Value: !GetAtt getLinksFunctionRole.Arn
